// AUTOMATICALLY GENERATED FILE. PLEASE DO NOT MODIFY IT MANUALLY
//
// PlatformIO Debugging Solution
//
// Documentation: https://docs.platformio.org/en/latest/plus/debugging.html
// Configuration: https://docs.platformio.org/en/latest/projectconf/sections/env/options/debug/index.html
{
    "version": "0.2.0",
    "configurations": [
        //        {
        //            "type": "platformio-debug",
        //            "request": "launch",
        //            "name": "PIO Debug",
        //            "executable": "${workspaceRoo}/.pio/build/pamis/firmware.elf",
        //            "projectEnvName": "pamis",
        //            "toolchainBinDir": "/home/rixae/.platformio/packages/toolchain-gccarmnoneeabi/bin",
        //            "internalConsoleOptions": "openOnSessionStart",
        //            "svdPath": "/home/rixae/.platformio/platforms/ststm32/misc/svd/STM32G431xx.svd",
        //            "preLaunchTask": {
        //                "type": "PlatformIO",
        //                "task": "Pre-Debug"
        //            }
        //        },
        //        {
        //            "type": "platformio-debug",
        //            "request": "launch",
        //            "name": "PIO Debug (skip Pre-Debug)",
        //            "executable": "${workspaceRoo}/.pio/build/pamis/firmware.elf",
        //            "projectEnvName": "pamis",
        //            "toolchainBinDir": "/home/rixae/.platformio/packages/toolchain-gccarmnoneeabi/bin",
        //            "internalConsoleOptions": "openOnSessionStart",
        //            "svdPath": "/home/rixae/.platformio/platforms/ststm32/misc/svd/STM32G431xx.svd"
        //        },
        //        {
        //            "type": "platformio-debug",
        //            "request": "launch",
        //            "name": "PIO Debug (without uploading)",
        //            "executable": "${workspaceRoo}/.pio/build/pamis/firmware.elf",
        //            "projectEnvName": "pamis",
        //            "toolchainBinDir": "/home/rixae/.platformio/packages/toolchain-gccarmnoneeabi/bin",
        //            "internalConsoleOptions": "openOnSessionStart",
        //            "svdPath": "/home/rixae/.platformio/platforms/ststm32/misc/svd/STM32G431xx.svd",
        //            "loadMode": "manual"
        //        },
        {
            "type": "stutil-gdb",
            "request": "launch",
            "name": "Debug Microcontroller",
            "cwd": "${workspaceRoot}",
            "executable": "${workspaceRoot}/.pio/build/pamis/firmware.elf",
            "device": "STM32L476vg",
            "gdbpath": "${env:HOME}/.platformio/packages/toolchain-gccarmnoneeabi/bin/arm-none-eabi-gdb",
            "stutilpath": "${env:HOME}/.platformio/packages/tool-stlink/bin/st-util"
        },
        {
            "name": "STlink launch",
            "cwd": "${workspaceRoot}",
            "executable": "${workspaceRoot}/.pio/build/pamis/firmware.elf",
            "request": "launch",
            "type": "cortex-debug",
            "servertype": "stutil",
            "device": "STM32G431CB",
            "interface": "swd",
            "runToEntryPoint": "main", // else it starts at reset handler 
            //"preLaunchTask": "Build all", // configured in tasks.json
            // "preLaunchCommands": ["Build all"], // you can execute command instead of task
            "svdFile": "", // Include svd to watch device peripherals
            "swoConfig": {} // currently (v1.7.0) not supported
        },
        {
            "name": "STlink attach",
            "cwd": "${workspaceRoot}",
            "executable": "${workspaceRoot}/.pio/build/pamis/firmware.elf",
            "request": "attach",
            "type": "cortex-debug",
            "servertype": "stutil",
            "device": "STM32G431CB",
            "interface": "swd",
            "runToEntryPoint": "main", // else it starts at reset handler
            //"preLaunchTask": "Build all", // configured in tasks.json
            // "preLaunchCommands": ["Build all"], // you can execute command instead of task
            "svdFile": "", // Include svd to watch device peripherals
            "swoConfig": {} // currently (v1.7.0) not supported
        }
    ]
}